# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/rbac/v2/rbac.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class Rbac(betterproto.Message):
    """RBAC filter config."""

    # Specify the RBAC rules to be applied globally. If absent, no enforcing RBAC
    # policy will be applied.
    rules: "____rbac_v2__.Rbac" = betterproto.message_field(1)
    # Shadow rules are not enforced by the filter (i.e., returning a 403) but
    # will emit stats and logs and can be used for rule testing. If absent, no
    # shadow RBAC policy will be applied.
    shadow_rules: "____rbac_v2__.Rbac" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RbacPerRoute(betterproto.Message):
    # Override the global configuration of the filter with this new config. If
    # absent, the global RBAC policy will be disabled for this route.
    rbac: "Rbac" = betterproto.message_field(2)


from .....rbac import v2 as ____rbac_v2__
