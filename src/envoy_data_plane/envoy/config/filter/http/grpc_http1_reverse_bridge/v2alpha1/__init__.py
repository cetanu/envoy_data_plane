# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/grpc_http1_reverse_bridge/v2alpha1/config.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class FilterConfig(betterproto.Message):
    """gRPC reverse bridge filter configuration"""

    # The content-type to pass to the upstream when the gRPC bridge filter is
    # applied. The filter will also validate that the upstream responds with the
    # same content type.
    content_type: str = betterproto.string_field(1)
    # If true, Envoy will assume that the upstream doesn't understand gRPC frames
    # and strip the gRPC frame from the request, and add it back in to the
    # response. This will hide the gRPC semantics from the upstream, allowing it
    # to receive and respond with a simple binary encoded protobuf.
    withhold_grpc_frames: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FilterConfigPerRoute(betterproto.Message):
    """
    gRPC reverse bridge filter configuration per virtualhost/route/weighted-
    cluster level.
    """

    # If true, disables gRPC reverse bridge filter for this particular vhost or
    # route. If disabled is specified in multiple per-filter-configs, the most
    # specific one will be used.
    disabled: bool = betterproto.bool_field(1)
