# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/network/rate_limit/v2/rate_limit.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import timedelta
from typing import List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class RateLimit(betterproto.Message):
    """[#next-free-field: 7]"""

    # The prefix to use when emitting :ref:`statistics
    # <config_network_filters_rate_limit_stats>`.
    stat_prefix: str = betterproto.string_field(1)
    # The rate limit domain to use in the rate limit service request.
    domain: str = betterproto.string_field(2)
    # The rate limit descriptor list to use in the rate limit service request.
    descriptors: List[
        "_____api_v2_ratelimit__.RateLimitDescriptor"
    ] = betterproto.message_field(3)
    # The timeout in milliseconds for the rate limit service RPC. If not set,
    # this defaults to 20ms.
    timeout: timedelta = betterproto.message_field(4)
    # The filter's behaviour in case the rate limiting service does not respond
    # back. When it is set to true, Envoy will not allow traffic in case of
    # communication failure between rate limiting service and the proxy. Defaults
    # to false.
    failure_mode_deny: bool = betterproto.bool_field(5)
    # Configuration for an external rate limit service provider. If not
    # specified, any calls to the rate limit service will immediately return
    # success.
    rate_limit_service: "____ratelimit_v2__.RateLimitServiceConfig" = (
        betterproto.message_field(6)
    )


from ......api.v2 import ratelimit as _____api_v2_ratelimit__
from .....ratelimit import v2 as ____ratelimit_v2__
