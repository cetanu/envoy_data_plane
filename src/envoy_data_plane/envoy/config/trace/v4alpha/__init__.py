# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/trace/v4alpha/http_tracer.proto, envoy/config/trace/v4alpha/service.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class TraceServiceConfig(betterproto.Message):
    """Configuration structure."""

    # The upstream gRPC cluster that hosts the metrics service.
    grpc_service: "__core_v4_alpha__.GrpcService" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Tracing(betterproto.Message):
    """
    The tracing configuration specifies settings for an HTTP tracer provider
    used by Envoy. Envoy may support other tracers in the future, but right now
    the HTTP tracer is the only one supported. .. attention::   Use of this
    message type has been deprecated in favor of direct use of
    :ref:`Tracing.Http <envoy_api_msg_config.trace.v4alpha.Tracing.Http>`.
    """

    # Provides configuration for the HTTP tracer.
    http: "TracingHttp" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TracingHttp(betterproto.Message):
    """
    Configuration for an HTTP tracer provider used by Envoy. The configuration
    is defined by the :ref:`HttpConnectionManager.Tracing <envoy_api_msg_extens
    ions.filters.network.http_connection_manager.v4alpha.HttpConnectionManager.
    Tracing>` :ref:`provider <envoy_api_field_extensions.filters.network.http_c
    onnection_manager.v4alpha.HttpConnectionManager.Tracing.provider>` field.
    """

    # The name of the HTTP trace driver to instantiate. The name must match a
    # supported HTTP trace driver. Built-in trace drivers: -
    # *envoy.tracers.lightstep* - *envoy.tracers.zipkin* -
    # *envoy.tracers.dynamic_ot* - *envoy.tracers.datadog* -
    # *envoy.tracers.opencensus* - *envoy.tracers.xray*
    name: str = betterproto.string_field(1)
    typed_config: "betterproto_lib_google_protobuf.Any" = betterproto.message_field(
        3, group="config_type"
    )


from ...core import v4alpha as __core_v4_alpha__
import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf
