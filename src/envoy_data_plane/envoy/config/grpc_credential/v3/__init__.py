# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/grpc_credential/v3/aws_iam.proto, envoy/config/grpc_credential/v3/file_based_metadata.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class FileBasedMetadataConfig(betterproto.Message):
    # Location or inline data of secret to use for authentication of the Google
    # gRPC connection this secret will be attached to a header of the gRPC
    # connection
    secret_data: "__core_v3__.DataSource" = betterproto.message_field(1)
    # Metadata header key to use for sending the secret data if no header key is
    # set, "authorization" header will be used
    header_key: str = betterproto.string_field(2)
    # Prefix to prepend to the secret in the metadata header if no prefix is set,
    # the default is to use no prefix
    header_prefix: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class AwsIamConfig(betterproto.Message):
    # The `service namespace <https://docs.aws.amazon.com/general/latest/gr/aws-
    # arns-and-namespaces.html#genref-aws-service-namespaces>`_ of the Grpc
    # endpoint. Example: appmesh
    service_name: str = betterproto.string_field(1)
    # The `region <https://docs.aws.amazon.com/general/latest/gr/rande.html>`_
    # hosting the Grpc endpoint. If unspecified, the extension will use the value
    # in the ``AWS_REGION`` environment variable. Example: us-west-2
    region: str = betterproto.string_field(2)


from ...core import v3 as __core_v3__
