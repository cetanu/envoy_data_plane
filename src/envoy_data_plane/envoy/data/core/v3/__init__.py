# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/data/core/v3/health_check_event.proto
# plugin: python-betterproto
from dataclasses import dataclass
from datetime import datetime

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class HealthCheckFailureType(betterproto.Enum):
    ACTIVE = 0
    PASSIVE = 1
    NETWORK = 2
    NETWORK_TIMEOUT = 3


class HealthCheckerType(betterproto.Enum):
    HTTP = 0
    TCP = 1
    GRPC = 2
    REDIS = 3


@dataclass(eq=False, repr=False)
class HealthCheckEvent(betterproto.Message):
    """[#next-free-field: 10]"""

    health_checker_type: "HealthCheckerType" = betterproto.enum_field(1)
    host: "___config_core_v3__.Address" = betterproto.message_field(2)
    cluster_name: str = betterproto.string_field(3)
    # Host ejection.
    eject_unhealthy_event: "HealthCheckEjectUnhealthy" = betterproto.message_field(
        4, group="event"
    )
    # Host addition.
    add_healthy_event: "HealthCheckAddHealthy" = betterproto.message_field(
        5, group="event"
    )
    # Host failure.
    health_check_failure_event: "HealthCheckFailure" = betterproto.message_field(
        7, group="event"
    )
    # Healthy host became degraded.
    degraded_healthy_host: "DegradedHealthyHost" = betterproto.message_field(
        8, group="event"
    )
    # A degraded host returned to being healthy.
    no_longer_degraded_host: "NoLongerDegradedHost" = betterproto.message_field(
        9, group="event"
    )
    # Timestamp for event.
    timestamp: datetime = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class HealthCheckEjectUnhealthy(betterproto.Message):
    # The type of failure that caused this ejection.
    failure_type: "HealthCheckFailureType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class HealthCheckAddHealthy(betterproto.Message):
    # Whether this addition is the result of the first ever health check on a
    # host, in which case the configured :ref:`healthy threshold
    # <envoy_v3_api_field_config.core.v3.HealthCheck.healthy_threshold>` is
    # bypassed and the host is immediately added.
    first_check: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class HealthCheckFailure(betterproto.Message):
    # The type of failure that caused this event.
    failure_type: "HealthCheckFailureType" = betterproto.enum_field(1)
    # Whether this event is the result of the first ever health check on a host.
    first_check: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class DegradedHealthyHost(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class NoLongerDegradedHost(betterproto.Message):
    pass


from ....config.core import v3 as ___config_core_v3__
