# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/tracers/opencensus/v4alpha/opencensus.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class OpenCensusConfigTraceContext(betterproto.Enum):
    NONE = 0
    TRACE_CONTEXT = 1
    GRPC_TRACE_BIN = 2
    CLOUD_TRACE_CONTEXT = 3
    B3 = 4


@dataclass(eq=False, repr=False)
class OpenCensusConfig(betterproto.Message):
    """
    Configuration for the OpenCensus tracer. [#next-free-field: 15]
    [#extension: envoy.tracers.opencensus]
    """

    # Configures tracing, e.g. the sampler, max number of annotations, etc.
    trace_config: "_____opencensus_proto_trace_v1__.TraceConfig" = (
        betterproto.message_field(1)
    )
    # Enables the stdout exporter if set to true. This is intended for debugging
    # purposes.
    stdout_exporter_enabled: bool = betterproto.bool_field(2)
    # Enables the Stackdriver exporter if set to true. The project_id must also
    # be set.
    stackdriver_exporter_enabled: bool = betterproto.bool_field(3)
    # The Cloud project_id to use for Stackdriver tracing.
    stackdriver_project_id: str = betterproto.string_field(4)
    # (optional) By default, the Stackdriver exporter will connect to production
    # Stackdriver. If stackdriver_address is non-empty, it will instead connect
    # to this address, which is in the gRPC format:
    # https://github.com/grpc/grpc/blob/master/doc/naming.md
    stackdriver_address: str = betterproto.string_field(10)
    # (optional) The gRPC server that hosts Stackdriver tracing service. Only
    # Google gRPC is supported. If :ref:`target_uri
    # <envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri>` is
    # not provided, the default production Stackdriver address will be used.
    stackdriver_grpc_service: "____config_core_v4_alpha__.GrpcService" = (
        betterproto.message_field(13)
    )
    # Enables the Zipkin exporter if set to true. The url and service name must
    # also be set.
    zipkin_exporter_enabled: bool = betterproto.bool_field(5)
    # The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans"
    zipkin_url: str = betterproto.string_field(6)
    # Enables the OpenCensus Agent exporter if set to true. The ocagent_address
    # or ocagent_grpc_service must also be set.
    ocagent_exporter_enabled: bool = betterproto.bool_field(11)
    # The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
    # format: https://github.com/grpc/grpc/blob/master/doc/naming.md
    # [#comment:TODO: deprecate this field]
    ocagent_address: str = betterproto.string_field(12)
    # (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC
    # is supported. This is only used if the ocagent_address is left empty.
    ocagent_grpc_service: "____config_core_v4_alpha__.GrpcService" = (
        betterproto.message_field(14)
    )
    # List of incoming trace context headers we will accept. First one found
    # wins.
    incoming_trace_context: List[
        "OpenCensusConfigTraceContext"
    ] = betterproto.enum_field(8)
    # List of outgoing trace context headers we will produce.
    outgoing_trace_context: List[
        "OpenCensusConfigTraceContext"
    ] = betterproto.enum_field(9)


from ......opencensus.proto.trace import v1 as _____opencensus_proto_trace_v1__
from .....config.core import v4alpha as ____config_core_v4_alpha__
