# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/rbac/v3/rbac.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class Rbac(betterproto.Message):
    """RBAC filter config."""

    # Specify the RBAC rules to be applied globally. If absent, no enforcing RBAC
    # policy will be applied. If present and empty, DENY.
    rules: "_____config_rbac_v3__.Rbac" = betterproto.message_field(1)
    # Shadow rules are not enforced by the filter (i.e., returning a 403) but
    # will emit stats and logs and can be used for rule testing. If absent, no
    # shadow RBAC policy will be applied.
    shadow_rules: "_____config_rbac_v3__.Rbac" = betterproto.message_field(2)
    # If specified, shadow rules will emit stats with the given prefix. This is
    # useful to distinguish the stat when there are more than 1 RBAC filter
    # configured with shadow rules.
    shadow_rules_stat_prefix: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class RbacPerRoute(betterproto.Message):
    # Override the global configuration of the filter with this new config. If
    # absent, the global RBAC policy will be disabled for this route.
    rbac: "Rbac" = betterproto.message_field(2)


from ......config.rbac import v3 as _____config_rbac_v3__
