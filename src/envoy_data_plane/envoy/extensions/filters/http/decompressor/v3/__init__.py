# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/decompressor/v3/decompressor.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Optional

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class Decompressor(betterproto.Message):
    # A decompressor library to use for both request and response decompression.
    # Currently only :ref:`envoy.compression.gzip.compressor<envoy_api_msg_extens
    # ions.compression.gzip.decompressor.v3.Gzip>` is included in Envoy.
    decompressor_library: "_____config_core_v3__.TypedExtensionConfig" = (
        betterproto.message_field(1)
    )
    # Configuration for request decompression. Decompression is enabled by
    # default if left empty.
    request_direction_config: "DecompressorRequestDirectionConfig" = (
        betterproto.message_field(2)
    )
    # Configuration for response decompression. Decompression is enabled by
    # default if left empty.
    response_direction_config: "DecompressorResponseDirectionConfig" = (
        betterproto.message_field(3)
    )


@dataclass(eq=False, repr=False)
class DecompressorCommonDirectionConfig(betterproto.Message):
    """
    Common configuration for filter behavior on both the request and response
    direction.
    """

    # Runtime flag that controls whether the filter is enabled for decompression
    # or not. If set to false, the filter will operate as a pass-through filter.
    # If the message is unspecified, the filter will be enabled.
    enabled: "_____config_core_v3__.RuntimeFeatureFlag" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DecompressorRequestDirectionConfig(betterproto.Message):
    """Configuration for filter behavior on the request direction."""

    common_config: "DecompressorCommonDirectionConfig" = betterproto.message_field(1)
    # If set to true, and response decompression is enabled, the filter modifies
    # the Accept-Encoding request header by appending the decompressor_library's
    # encoding. Defaults to true.
    advertise_accept_encoding: Optional[bool] = betterproto.message_field(
        2, wraps=betterproto.TYPE_BOOL
    )


@dataclass(eq=False, repr=False)
class DecompressorResponseDirectionConfig(betterproto.Message):
    """Configuration for filter behavior on the response direction."""

    common_config: "DecompressorCommonDirectionConfig" = betterproto.message_field(1)


from ......config.core import v3 as _____config_core_v3__
