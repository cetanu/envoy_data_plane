# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/compressor/v3/compressor.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class Compressor(betterproto.Message):
    """[#next-free-field: 7]"""

    # Minimum response length, in bytes, which will trigger compression. The
    # default value is 30.
    content_length: Optional[int] = betterproto.message_field(
        1, wraps=betterproto.TYPE_UINT32
    )
    # Set of strings that allows specifying which mime-types yield compression;
    # e.g., application/json, text/html, etc. When this field is not defined,
    # compression will be applied to the following mime-types:
    # "application/javascript", "application/json", "application/xhtml+xml",
    # "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml" and
    # their synonyms.
    content_type: List[str] = betterproto.string_field(2)
    # If true, disables compression when the response contains an etag header.
    # When it is false, the filter will preserve weak etags and remove the ones
    # that require strong validation.
    disable_on_etag_header: bool = betterproto.bool_field(3)
    # If true, removes accept-encoding from the request headers before
    # dispatching it to the upstream so that responses do not get compressed
    # before reaching the filter. .. attention:    To avoid interfering with
    # other compression filters in the same chain use this option in    the
    # filter closest to the upstream.
    remove_accept_encoding_header: bool = betterproto.bool_field(4)
    # Runtime flag that controls whether the filter is enabled or not. If set to
    # false, the filter will operate as a pass-through filter. If not specified,
    # defaults to enabled.
    runtime_enabled: "_____config_core_v3__.RuntimeFeatureFlag" = (
        betterproto.message_field(5)
    )
    # A compressor library to use for compression. Currently only :ref:`envoy.com
    # pression.gzip.compressor<envoy_api_msg_extensions.compression.gzip.compress
    # or.v3.Gzip>` is included in Envoy. This field is ignored if used in the
    # context of the gzip http-filter, but is mandatory otherwise.
    compressor_library: "_____config_core_v3__.TypedExtensionConfig" = (
        betterproto.message_field(6)
    )


from ......config.core import v3 as _____config_core_v3__
