# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/common/dependency/v3/dependency.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class DependencyDependencyType(betterproto.Enum):
    HEADER = 0
    FILTER_STATE_KEY = 1
    DYNAMIC_METADATA = 2


@dataclass(eq=False, repr=False)
class Dependency(betterproto.Message):
    """Dependency specification and string identifier."""

    # The kind of dependency.
    type: "DependencyDependencyType" = betterproto.enum_field(1)
    # The string identifier for the dependency.
    name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class FilterDependencies(betterproto.Message):
    """
    Dependency specification for a filter. For a filter chain to be valid, any
    dependency that is required must be provided by an earlier filter.
    """

    # A list of dependencies required on the decode path.
    decode_required: List["Dependency"] = betterproto.message_field(1)
    # A list of dependencies provided on the encode path.
    decode_provided: List["Dependency"] = betterproto.message_field(2)
    # A list of dependencies required on the decode path.
    encode_required: List["Dependency"] = betterproto.message_field(3)
    # A list of dependencies provided on the encode path.
    encode_provided: List["Dependency"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MatchingRequirements(betterproto.Message):
    """
    Matching requirements for a filter. For a match tree to be used with a
    filter, the match requirements must be satisfied. This protobuf is provided
    by the filter implementation as a way to communicate the matching
    requirements to the filter factories, allowing for config rejection if the
    requirements are not satisfied.
    """

    data_input_allow_list: "MatchingRequirementsDataInputAllowList" = (
        betterproto.message_field(1)
    )


@dataclass(eq=False, repr=False)
class MatchingRequirementsDataInputAllowList(betterproto.Message):
    # An explicit list of data inputs that are allowed to be used with this
    # filter.
    type_url: List[str] = betterproto.string_field(1)
