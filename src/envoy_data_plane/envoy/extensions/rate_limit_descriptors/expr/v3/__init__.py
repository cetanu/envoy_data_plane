# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/rate_limit_descriptors/expr/v3/expr.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class Descriptor(betterproto.Message):
    """
    The following descriptor entry is appended with a value computed from a
    symbolic Common Expression Language expression. See :ref:`attributes
    <arch_overview_attributes>` for the set of available attributes. .. code-
    block:: cpp   ("<descriptor_key>", "<expression_value>")
    """

    # The key to use in the descriptor entry.
    descriptor_key: str = betterproto.string_field(1)
    # If set to true, Envoy skips the descriptor if the expression evaluates to
    # an error. By default, the rate limit is not applied when an expression
    # produces an error.
    skip_if_error: bool = betterproto.bool_field(2)
    # Expression in a text form, e.g. "connection.requested_server_name".
    text: str = betterproto.string_field(3, group="expr_specifier")
    # Parsed expression in AST form.
    parsed: "_____google_api_expr_v1_alpha1__.Expr" = betterproto.message_field(
        4, group="expr_specifier"
    )


from ......google.api.expr import v1alpha1 as _____google_api_expr_v1_alpha1__
