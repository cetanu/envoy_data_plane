# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/access_loggers/file/v3/file.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class FileAccessLog(betterproto.Message):
    """
    Custom configuration for an :ref:`AccessLog
    <envoy_api_msg_config.accesslog.v3.AccessLog>` that writes log entries
    directly to a file. Configures the built-in *envoy.file_access_log*
    AccessLog.
    """

    # A path to a local file to which to write the access log entries.
    path: str = betterproto.string_field(1)
    # Access log :ref:`format string<config_access_log_format_strings>`. Envoy
    # supports :ref:`custom access log formats <config_access_log_format>` as
    # well as a :ref:`default format <config_access_log_default_format>`.
    format: str = betterproto.string_field(2, group="access_log_format")
    # Access log :ref:`format dictionary<config_access_log_format_dictionaries>`.
    # All values are rendered as strings.
    json_format: "betterproto_lib_google_protobuf.Struct" = betterproto.message_field(
        3, group="access_log_format"
    )
    # Access log :ref:`format dictionary<config_access_log_format_dictionaries>`.
    # Values are rendered as strings, numbers, or boolean values as appropriate.
    # Nested JSON objects may be produced by some command operators
    # (e.g.FILTER_STATE or DYNAMIC_METADATA). See the documentation for a
    # specific command operator for details.
    typed_json_format: "betterproto_lib_google_protobuf.Struct" = (
        betterproto.message_field(4, group="access_log_format")
    )


import betterproto.lib.google.protobuf as betterproto_lib_google_protobuf
