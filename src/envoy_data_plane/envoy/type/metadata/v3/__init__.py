# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/type/metadata/v3/metadata.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


@dataclass(eq=False, repr=False)
class MetadataKey(betterproto.Message):
    """
    MetadataKey provides a general interface using `key` and `path` to retrieve
    value from :ref:`Metadata <envoy_v3_api_msg_config.core.v3.Metadata>`. For
    example, for the following Metadata: .. code-block:: yaml
    filter_metadata:      envoy.xxx:        prop:          foo: bar
    xyz:            hello: envoy The following MetadataKey will retrieve a
    string value "bar" from the Metadata. .. code-block:: yaml    key:
    envoy.xxx    path:    - key: prop    - key: foo
    """

    # The key name of Metadata to retrieve the Struct from the metadata.
    # Typically, it represents a builtin subsystem or custom extension.
    key: str = betterproto.string_field(1)
    # The path to retrieve the Value from the Struct. It can be a prefix or a
    # full path, e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a
    # string in the example, which depends on the particular scenario. Note: Due
    # to that only the key type segment is supported, the path can not specify a
    # list unless the list is the last segment.
    path: List["MetadataKeyPathSegment"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MetadataKeyPathSegment(betterproto.Message):
    """
    Specifies the segment in a path to retrieve value from Metadata. Currently
    it is only supported to specify the key, i.e. field name, as one segment of
    a path.
    """

    # If specified, use the key to retrieve the value in a Struct.
    key: str = betterproto.string_field(1, group="segment")


@dataclass(eq=False, repr=False)
class MetadataKind(betterproto.Message):
    """Describes what kind of metadata."""

    # Request kind of metadata.
    request: "MetadataKindRequest" = betterproto.message_field(1, group="kind")
    # Route kind of metadata.
    route: "MetadataKindRoute" = betterproto.message_field(2, group="kind")
    # Cluster kind of metadata.
    cluster: "MetadataKindCluster" = betterproto.message_field(3, group="kind")
    # Host kind of metadata.
    host: "MetadataKindHost" = betterproto.message_field(4, group="kind")


@dataclass(eq=False, repr=False)
class MetadataKindRequest(betterproto.Message):
    """Represents dynamic metadata associated with the request."""

    pass


@dataclass(eq=False, repr=False)
class MetadataKindRoute(betterproto.Message):
    """
    Represents metadata from :ref:`the
    route<envoy_v3_api_field_config.route.v3.Route.metadata>`.
    """

    pass


@dataclass(eq=False, repr=False)
class MetadataKindCluster(betterproto.Message):
    """
    Represents metadata from :ref:`the upstream
    cluster<envoy_v3_api_field_config.cluster.v3.Cluster.metadata>`.
    """

    pass


@dataclass(eq=False, repr=False)
class MetadataKindHost(betterproto.Message):
    """
    Represents metadata from :ref:`the upstream
    host<envoy_v3_api_field_config.endpoint.v3.LbEndpoint.metadata>`.
    """

    pass
